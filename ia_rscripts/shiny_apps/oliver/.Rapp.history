# server.R#
library("ncdf4")#
library("ggplot2")#
library("stringr")#
library("scales")#
#
# Define constants#
#
#PATH_NCDF4 <- "/Users/chris/Dropbox/hi/atlantis/example/SETas_model_New/OutputFolderTest/outputSETAS.nc"#
#PATH_BGM <- "/Users/chris/Dropbox/hi/atlantis/example/SETas_model_New/VMPA_setas.bgm"#
PATH_NCDF4 <- "data/output_iceland.nc"#
PATH_BGM <- "data/atlantis_L93.bgm"#
BIOMASS <- read.table("data/output_icelandBiomIndx.txt", header = T)#
SSB <- read.table("data/output_icelandSSB.txt", header = TRUE)#
YOY <- read.table("data/output_icelandYOY.txt", header = TRUE)#
#
match <- grep("Rel",colnames(BIOMASS))#
RELATIVE <- BIOMASS[,c(1,match)]#
ssbNames <- colnames(SSB)[-1]#
yoyNames <- colnames(YOY)[-1]#
relNames <- colnames(RELATIVE)[-1]#
#
# Plot map first based on BGM --------------------------------------#
#
bgm <- readLines(PATH_BGM)#
#
numboxes <- length(grep("# Box number", bgm))#
#
vertices <- data.frame()#
for(i in 1:numboxes){#
  vert_tmp <- grep(paste("box", i - 1, ".vert ", sep = ""), bgm)#
  vertices <- rbind(vertices, cbind(i - 1, bgm[vert_tmp]))#
}#
#
coords_tmp <- str_split(vertices$V2, pattern = " ")#
x <- sapply(coords_tmp,`[`,2)#
y <- sapply(coords_tmp,`[`,3)#
#
map_base <- data.frame(boxid = vertices$V1, x = x, y = y)#
map_base$x <- as.double(as.character(map_base$x))#
map_base$y <- as.double(as.character(map_base$y))#
#
# Plot data from variables#
output <- nc_open(filename = PATH_NCDF4)#
maxTracer <- output$nvars#
maxLayers <- length(output$dim$z$vals)#
maxTime <- length(output$dim$t$vals)#
varNames <-names(output$var)#
#
# Maybe this will work?#
vars <- list()#
for (i in 1:output$nvars){#
  vars[[i]] <- ncvar_get(nc = output, output$var[[i]])#
  print(i)#
}#
names(vars) <- varNames
setwd("Dropbox/hi/atlantis/atlantis_materials/rscripts/output/shiny_apps/oliver/")
# server.R#
library("ncdf4")#
library("ggplot2")#
library("stringr")#
library("scales")#
#
# Define constants#
#
#PATH_NCDF4 <- "/Users/chris/Dropbox/hi/atlantis/example/SETas_model_New/OutputFolderTest/outputSETAS.nc"#
#PATH_BGM <- "/Users/chris/Dropbox/hi/atlantis/example/SETas_model_New/VMPA_setas.bgm"#
PATH_NCDF4 <- "data/output_iceland.nc"#
PATH_BGM <- "data/atlantis_L93.bgm"#
BIOMASS <- read.table("data/output_icelandBiomIndx.txt", header = T)#
SSB <- read.table("data/output_icelandSSB.txt", header = TRUE)#
YOY <- read.table("data/output_icelandYOY.txt", header = TRUE)#
#
match <- grep("Rel",colnames(BIOMASS))#
RELATIVE <- BIOMASS[,c(1,match)]#
ssbNames <- colnames(SSB)[-1]#
yoyNames <- colnames(YOY)[-1]#
relNames <- colnames(RELATIVE)[-1]#
#
# Plot map first based on BGM --------------------------------------#
#
bgm <- readLines(PATH_BGM)#
#
numboxes <- length(grep("# Box number", bgm))#
#
vertices <- data.frame()#
for(i in 1:numboxes){#
  vert_tmp <- grep(paste("box", i - 1, ".vert ", sep = ""), bgm)#
  vertices <- rbind(vertices, cbind(i - 1, bgm[vert_tmp]))#
}#
#
coords_tmp <- str_split(vertices$V2, pattern = " ")#
x <- sapply(coords_tmp,`[`,2)#
y <- sapply(coords_tmp,`[`,3)#
#
map_base <- data.frame(boxid = vertices$V1, x = x, y = y)#
map_base$x <- as.double(as.character(map_base$x))#
map_base$y <- as.double(as.character(map_base$y))#
#
# Plot data from variables#
output <- nc_open(filename = PATH_NCDF4)#
maxTracer <- output$nvars#
maxLayers <- length(output$dim$z$vals)#
maxTime <- length(output$dim$t$vals)#
varNames <-names(output$var)#
#
# Maybe this will work?#
vars <- list()#
for (i in 1:output$nvars){#
  vars[[i]] <- ncvar_get(nc = output, output$var[[i]])#
  print(i)#
}#
names(vars) <- varNames
library("shiny")
runApp()
q()
